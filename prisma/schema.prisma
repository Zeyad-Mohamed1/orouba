generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Brand {
  id             Int        @id @default(autoincrement())
  name_ar        String
  name_en        String
  description_ar String     @db.Text
  description_en String     @db.Text
  brand_text_ar  String     @db.Text
  brand_text_en  String     @db.Text
  color          String
  main_image     String?
  banner         String?
  small_img      String?
  created_at     DateTime   @default(now())
  updated_at     DateTime   @updatedAt
  categories     Category[]
}

model Category {
  id             Int       @id @default(autoincrement())
  name_ar        String
  name_en        String
  description_ar String?   @db.Text
  description_en String?   @db.Text
  image          String
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
  brand          Brand     @relation(fields: [brand_id], references: [id])
  brand_id       Int
  products       Product[]
}

model Product {
  id             Int      @id @default(autoincrement())
  name_ar        String
  name_en        String
  description_ar String   @db.Text
  description_en String   @db.Text
  color          String
  image          String
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  category       Category @relation(fields: [category_id], references: [id])
  category_id    Int
  recipes        Recipe[]
}

model Recipe {
  id           Int      @id @default(autoincrement())
  level        String // Easy, Medium, Hard
  prep_time    Int // In minutes
  cooking_time Int // In minutes
  servings     Int
  image        String?
  ingredients  Json // Array of ingredients
  instructions Json // Array of instruction steps
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  product      Product? @relation(fields: [product_id], references: [id])
  product_id   Int?
  dish         Dish     @relation(fields: [dish_id], references: [id])
  dish_id      Int
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      String   @default("")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DishCategory {
  id         Int      @id @default(autoincrement())
  name_ar    String
  name_en    String
  image      String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  dishes     Dish[]
}

model Dish {
  id              Int          @id @default(autoincrement())
  name_ar         String
  name_en         String
  image           String?
  created_at      DateTime     @default(now())
  updated_at      DateTime     @updatedAt
  recipes         Recipe[]
  dishCategory    DishCategory @relation(fields: [dishCategory_id], references: [id])
  dishCategory_id Int
}

model ExportRequest {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String
  details   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Contact {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String
  subject   String
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Careers {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String
  cv        String
  position  String?
  message   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
